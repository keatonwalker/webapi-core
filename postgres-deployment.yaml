apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: api-postgres
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: null
  generation: 1
  labels:
    run: api-postgres
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/api-postgres
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
        tier: backend
        app: postgres
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        tier: backend
        app: postgres
    spec:
      containers:
        - image: launcher.gcr.io/google/postgresql10
          name: api-postgres
          env:
            - name: "POSTGRES_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: postgres-pass
                  key: password
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
              subPath: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data
---
# Request a persistent volume from the cluster using a Persistent Volume Claim.
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data
  annotations:
    volume.alpha.kubernetes.io/storage-class: default
spec:
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: 5Gi
